name: Release & Publish

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ closed ]
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    name: Release & Publish
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true &&
       (contains(github.event.pull_request.head.ref, 'feature/') || 
        contains(github.event.pull_request.head.ref, 'fix/') ||
        contains(github.event.pull_request.head.ref, 'hotfix/')))
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Run Tests
        run: npm test
      
      - name: Determine Version Type
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "type=${{ github.event.inputs.version_type }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.pull_request.head.ref }}" == feature/* ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.pull_request.head.ref }}" == fix/* ]] || [[ "${{ github.event.pull_request.head.ref }}" == hotfix/* ]]; then
            echo "type=patch" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi
      
      - name: Bump Version
        id: bump
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Get current version
          current_version=$(node -p "require('./package.json').version")
          echo "Current version: $current_version"
          
          # Bump version
          npm version ${{ steps.version.outputs.type }} --no-git-tag-version
          
          # Also bump sgpc-nanakshahi version
          cd sgpc-nanakshahi
          npm version ${{ steps.version.outputs.type }} --no-git-tag-version
          cd ..
          
          # Get new version
          new_version=$(node -p "require('./package.json').version")
          echo "New version: $new_version"
          echo "version=$new_version" >> $GITHUB_OUTPUT
      
      - name: Generate Release Notes
        id: release_notes
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            pr_title="${{ github.event.pull_request.title }}"
            pr_body="${{ github.event.pull_request.body }}"
            pr_number="${{ github.event.pull_request.number }}"
            branch_name="${{ github.event.pull_request.head.ref }}"
            
            cat > release_notes.md << EOF
          ## 🚀 Release v${{ steps.bump.outputs.version }}
          
          ### Changes
          - $pr_title ([#$pr_number](https://github.com/janpreet/nanakshahi-ical/pull/$pr_number))
          
          ### Branch
          - **$branch_name** → main
          
          ### Details
          $pr_body
          
          ### Automated Release
          This release was automatically created when the $branch_name branch was merged to main.
          EOF
          else
            cat > release_notes.md << EOF
          ## 🚀 Release v${{ steps.bump.outputs.version }}
          
          ### Manual Release
          This release was manually triggered.
          
          ### Version Bump
          - Type: ${{ steps.version.outputs.type }}
          - Version: ${{ steps.bump.outputs.version }}
          EOF
          fi
      
      - name: Commit Version Bump
        run: |
          git add package.json sgpc-nanakshahi/package.json
          git commit -m "🔖 Bump version to ${{ steps.bump.outputs.version }}"
          git push
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          release_name: Release v${{ steps.bump.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
      
      - name: Publish to npm
        run: |
          echo "🚀 Publishing to npm..."
          npm publish
          echo "✅ Published nanakshahi-ical@${{ steps.bump.outputs.version }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Notify Success
        run: |
          echo "🎉 Release completed successfully!"
          echo "📦 Package: https://www.npmjs.com/package/nanakshahi-ical"
          echo "🏷️ Version: ${{ steps.bump.outputs.version }}"
          echo "📋 Release: https://github.com/janpreet/nanakshahi-ical/releases/tag/v${{ steps.bump.outputs.version }}" 